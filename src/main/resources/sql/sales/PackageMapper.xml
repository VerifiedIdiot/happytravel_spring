<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happytravel.erp.sales.dao.PackageDao">

    <!-- 전체 패키지 목록 조회 -->
    <select id="getPackageList" resultType="kr.happytravel.erp.sales.model.sales.PackageModel" parameterType="hashmap">
        SELECT
        package_code,
        package_name,
        start_date,
        end_date,
        sale_start_date,
        sale_end_date,
        COUNTRY
        FROM
        TB_PACKAGE_INFO
        ORDER BY
        package_code
    </select>

    <!-- 전체 목록 카운트 -->
    <select id="getPackageCnt" resultType="int" parameterType="hashmap">
        SELECT COUNT(package_code)
        FROM TB_PACKAGE_INFO
    </select>

    <!-- 단건 조회 -->
    <select id="selectPackage" resultType="kr.happytravel.erp.sales.model.sales.PackageModel" parameterType="hashmap">
        SELECT
        package_code,
        package_name,
        start_date,
        end_date,
        hotel_code,
        flight_code,
        agency_code,
        total_price,
        sale_price,
        sale_start_date,
        sale_end_date,
        sale_amount,
        assign_code,
        COUNTRY
        FROM
        TB_PACKAGE_INFO
        WHERE
        package_code = #{packageCode}
    </select>

    <!-- 사원 권한정보 확인 쿼리 모듈화 -->
    <sql id="employmentCondition">
        EXISTS (
        SELECT 1
        FROM happytravel.TB_EMPLOYMENT_INFO
        WHERE DEPT_CODE = 3000
        AND STATUS_CODE = 1000
        AND POS_CODE NOT IN (1000, 1100)
        AND EMP_ID = #{empId}
        )
    </sql>

    <!-- 패키지 정보 삽입 -->
    <insert id="insertPackage" parameterType="hashmap">
        INSERT INTO TB_PACKAGE_INFO (
        PACKAGE_CODE,
        PACKAGE_NAME,
        START_DATE,
        END_DATE,
        HOTEL_CODE,
        FLIGHT_CODE,
        AGENCY_CODE,
        TOTAL_PRICE,
        SALE_PRICE,
        SALE_START_DATE,
        SALE_END_DATE,
        SALE_AMOUNT,
        ASSIGN_CODE,
        COUNTRY
        )
        SELECT
        CONCAT('PKG', LPAD(IFNULL(MAX_PACKAGE_NUM + 1, 1), 6, '0')),
        #{packageName},
        #{startDate},
        #{endDate},
        #{hotelCode},
        #{flightCode},
        #{agencyCode},
        #{totalPrice},
        #{salePrice},
        #{saleStartDate},
        #{saleEndDate},
        #{saleAmount},
        #{assignCode},
        #{country}
        FROM (
        SELECT MAX(CAST(SUBSTRING(PACKAGE_CODE, 4) AS UNSIGNED)) AS MAX_PACKAGE_NUM
        FROM TB_PACKAGE_INFO
        WHERE PACKAGE_CODE LIKE 'PKG%'
        ) AS subquery
        WHERE EXISTS (
        SELECT 1
        FROM TB_AGENCY_INFO
        WHERE AGENCY_CODE = #{agencyCode}
        )
        AND EXISTS (
        SELECT 1
        FROM TB_FLIGHT_INFO
        WHERE FLIGHT_CODE = #{flightCode}
        )
        AND EXISTS (
        SELECT 1
        FROM TB_HOTEL_INFO
        WHERE HOTEL_CODE = #{hotelCode}
        )
        AND #{totalPrice} * 1.2 = #{salePrice}
        AND <include refid="employmentCondition" />;
    </insert>

    <!-- 단건 수정 -->
    <update id="updatePackage" parameterType="hashmap">
        UPDATE TB_PACKAGE_INFO
        SET
        PACKAGE_NAME = #{packageName},
        START_DATE = #{startDate},
        END_DATE = #{endDate},
        HOTEL_CODE = #{hotelCode},
        FLIGHT_CODE = #{flightCode},
        AGENCY_CODE = #{agencyCode},
        TOTAL_PRICE = #{totalPrice},
        SALE_PRICE = #{salePrice},
        SALE_START_DATE = #{saleStartDate},
        SALE_END_DATE = #{saleEndDate},
        SALE_AMOUNT = #{saleAmount},
        ASSIGN_CODE = #{assignCode},
        COUNTRY = #{country}
        WHERE
        PACKAGE_CODE = #{packageCode}
        AND #{salePrice} >= #{totalPrice} * 1.2
        AND <include refid="employmentCondition" />;
    </update>

    <!-- 단건 삭제 -->
    <delete id="deletePackage" parameterType="hashmap">
        DELETE FROM TB_PACKAGE_INFO
        WHERE
        PACKAGE_CODE = #{packageCode}
        AND <include refid="employmentCondition" />;
    </delete>

</mapper>